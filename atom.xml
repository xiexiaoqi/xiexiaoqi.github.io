<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[小旋风]]></title>
  <link href="http://xiexiaoqi.github.io/atom.xml" rel="self"/>
  <link href="http://xiexiaoqi.github.io/"/>
  <updated>2014-08-12T18:01:47+08:00</updated>
  <id>http://xiexiaoqi.github.io/</id>
  <author>
    <name><![CDATA[谢小琪]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP 5.2.17 安装zip扩展]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2014/08/12/php-5-dot-2-17-an-zhuang-zipkuo-zhan/"/>
    <updated>2014-08-12T17:34:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2014/08/12/php-5-dot-2-17-an-zhuang-zipkuo-zhan</id>
    <content type="html"><![CDATA[<p>为了与线上开发环境保持一致，所以也不得不安装与线上同样版本的PHP。
由于是最精简安装，所以里面只包含了一些基本的扩展，其余一些到用的时候再装，也能让自己更加了解系统环境。</p>

<!--more-->


<p><img src="http://xiexiaoqi.github.io/images/post_img/phpinfo.jpg" title="PHP Version" ></p>

<p>开始安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>#[root@WebSrv-Develop-XieXiaoQi zip-1.12.3]/usr/local/webserver/php/bin/phpize
</span><span class='line'>#[root@WebSrv-Develop-XieXiaoQi zip-1.12.3]./configure --with-php-config=/usr/local/webserver/php/bin/php-config
</span><span class='line'>
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c: In function ‘php_zip_extract_file’:
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c:180: error: too many arguments to function ‘virtual_file_ex’
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c: In function ‘php_zip_get_properties’:
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c:1045: warning: assignment makes pointer from integer without a cast
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c: At top level:
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c:1209: warning: initialization discards qualifiers from pointer target type
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c: In function ‘zm_startup_zip’:
</span><span class='line'>/root/download/zip-1.12.3/php_zip.c:2841: warning: assignment discards qualifiers from pointer target type
</span><span class='line'>make: *** [php_zip.lo] Error 1</span></code></pre></td></tr></table></div></figure>


<p>报错</p>

<p>google 无解，遂想，会不会是我php版本太低，而所用的zip扩展太新，换一老版本一试</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://pecl.php.net/get/zip-1.10.2.tgz</span></code></pre></td></tr></table></div></figure>


<p>解压，安装
一路流畅，看见希望</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>make
</span><span class='line'>
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>"
</span><span class='line'>Build complete.
</span><span class='line'>Don't forget to run 'make test'.
</span><span class='line'>"
</span><span class='line'>
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>make install
</span><span class='line'>
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>=====================================================================
</span><span class='line'>PHP         : /usr/local/webserver/php/bin/php 
</span><span class='line'>CWD         : /root/download/zip-1.10.2
</span><span class='line'>Extra dirs  :
</span><span class='line'>VALGRIND    : Not used
</span><span class='line'>=====================================================================
</span><span class='line'>TIME START 2014-08-12 08:17:25
</span><span class='line'>=====================================================================</span></code></pre></td></tr></table></div></figure>


<p>安装 成功。</p>

<p>编辑php.ini，添加so文件，重启apache。phpinfo()查看</p>

<p><img src="http://xiexiaoqi.github.io/images/post_img/zip.jpg" title="PHP ZIP" ></p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Date()参数说明]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2014/01/11/php-date-can-shu-shuo-ming/"/>
    <updated>2014-01-11T13:26:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2014/01/11/php-date-can-shu-shuo-ming</id>
    <content type="html"><![CDATA[<p>PHP date()函数接受两个参数：</p>

<pre><code>format: 必需。规定时间戳的格式。
timestamp: 可选。规定时间戳。默认是当前的日期和时间。
</code></pre>

<!-- more -->


<p>format参数格式如下:</p>

<pre><code>a : "am" 或是 "pm"  
A : "AM" 或是 "PM"  
d : 几日，二位数字，若不足二位则前面补零; 如: "01" 至 "31"  
D : 星期几，三个英文字母; 如: "Fri"  
F : 月份，英文全名; 如: "January"  
h : 12 小时制的小时; 如: "01" 至 "12"  
H : 24 小时制的小时; 如: "00" 至 "23"  
g : 12 小时制的小时，不足二位不补零; 如: "1" 至 12"  
G : 24 小时制的小时，不足二位不补零; 如: "0" 至 "23"  
i : 分钟; 如: "00" 至 "59"  
j : 几日，二位数字，若不足二位不补零; 如: "1" 至 "31"  
l : 星期几，英文全名; 如: "Friday"  
m : 月份，二位数字，若不足二位则在前面补零; 如: "01" 至 "12"  
n : 月份，二位数字，若不足二位则不补零; 如: "1" 至 "12"  
M : 月份，三个英文字母; 如: "Jan"  
s : 秒; 如: "00" 至 "59"  
S : 字尾加英文序数，二个英文字母; 如: "th"，"nd"  
t : 指定月份的天数; 如: "28" 至 "31"  
U : 总秒数  
w : 数字型的星期几，如: "0" (星期日) 至 "6" (星期六)  
Y : 年，四位数字; 如: "1999"  
y : 年，二位数字; 如: "99"  
z : 一年中的第几天; 如: "0" 至 "365"  
</code></pre>

<p>PHP Date()参数说明</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vim学习笔记]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2014/01/03/vimxue-xi-bi-ji/"/>
    <updated>2014-01-03T17:34:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2014/01/03/vimxue-xi-bi-ji</id>
    <content type="html"><![CDATA[<p>这份笔记简单的记录了一些Vim编辑的基本操作命令，以便日后查看。</p>

<p>方向：(除了方向光标)</p>

<pre><code>左下上右
h j k l
可以配合数字一起使用： 20h向左移动20个字符
</code></pre>

<!-- more -->


<p>
翻页:(除了page down, page up)</p>

<pre><code>ctrl + f : 下一页
ctrl + b : 上一页
ctrl + d : 下半页
ctrl + u : 上半页
也可配合数字一起使用:2 + ctrl + f 向下翻两页
</code></pre>

<p>移动: ( 除光标外 )</p>

<pre><code>- : 向上移动到非空格的上一列
+ : 向下移动到非空格的下一列

n&lt;space&gt;: 向右移动指定n个字符,超出一行向下走
$/end : 到光标所在行尾
0/home: 到光标所在行首

H: 当前屏的第一行，第一个字符
M: 当前屏中间行的第一个字符
L: 当前屏最后一行的第一个字符

G     : 文档最后一行
nG    : 移动于第几行, 1G 第一行
gg    : 文档第一行     相当于1G
n&lt;enter&gt;: 以当前行为基础跳到第几行
</code></pre>

<p>搜索:</p>

<pre><code>/word : 向下搜索
?word : 向上搜索
n     : 继续搜索
N     : 向相反方向搜索
</code></pre>

<p>替换:</p>

<pre><code>:s/word1/word2/gc : 查找与替换
:n1,n2s/word1/word2/g :在第n1行到n2行之间搜索word1并将其替换成word2,/g表示全局
:n1,n2s/word1/word2/gc : 在第n1行到n2行之间搜索word1并将其替换成word2,c表示替换前询问确认
:1,$s/word1/word2/g  : 在第一行到最后一行之间搜索word1并将其替换成word2
</code></pre>

<p>删除:</p>

<pre><code>x: 删除光标后面的内容，相当于del
X: 删除光标前面的内容，相当于backspace
nx: 删除光标后面n个字符
D : 从光标的位置开始删除到行尾
dd: 删除光标所在行

ndd: 删除光标向下n行

d1G: 删除光标所在行到第一行的内容
d[0,home] :删除光标所在位置到这一行的第一个字符，但不包括光标所在位置的这个字符
d[$,end]: 删除光标所在位置到这一行的最后一个字符
</code></pre>

<p>复制：</p>

<pre><code>yy: 复制光标所在行
选择复制内容参照d1G..
</code></pre>

<p>粘贴:</p>

<pre><code>p: 将内容粘贴到光标所在行的下一行
P: 将内容粘贴到光标所在行的上一行
</code></pre>

<p>撤销与复原:</p>

<pre><code>u: 撤销
ctrl + r : 还原
</code></pre>

<p>其他操作:</p>

<pre><code>J: 将两行拼接成一行
.: 重做前面的动作,比如前面做了dd然后你还想再删一行，则执行.就行
</code></pre>

<p>进入编辑模式:</p>

<pre><code>i: 从光标所在字符前一个位置处开始插入
I: 从光标所在行的第一个字符处开始插入
a: 从光标所在字符的后一个位置处插入
A: 从光标所在行的最后一个字符处插入
o: 在光标下方插入新行
O: 在光标上方插入新行
r: 替换光标所在字符
R: 从光标所在位置开始一直向后替换字符，一直到按esc
</code></pre>

<p>命令模式:</p>

<pre><code>ZZ : 若档案没有改动则直接离开，若档案有改动收保存后离开
:w[filename] : 另存为
:n1,n2 w[filename]: 指定行数内容另存为
:r[filename] : 将另一个文件的内容读入到光标下面区域
:! 命令      : 暂时离开vim环境，去执行命令
</code></pre>

<p>区块选择:</p>

<pre><code>v : 字符选择
V : 行选择
ctrl + v : 区块选择
y : 复制选区
d : 删除选区
</code></pre>

<p>多文件操作:</p>

<pre><code>vim files1 files2
:files  : 查看当前编辑器打开多少个文件
:n      : 显示下一个文件
:N      : 显示上一个文件
</code></pre>

<p>窗口多开:</p>

<pre><code>用于大文件查看上下文
文件对比
:sp files : 对应要打开的文件，为空的话就是打开当前文件
ctrl + w  : 窗口切换
</code></pre>

<p>在win系统下的Vim中文乱码解决方法</p>

<p>找到文件_vimrc(一般在程序安装目录)
添加如下代码:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>set encoding=utf-8
</span><span class='line'>"set termencoding=utf-8
</span><span class='line'>set fileencodings=ucs-bom,utf-8,chinese,latin-1
</span><span class='line'>if has("win32")
</span><span class='line'>  set fileencoding=chinese
</span><span class='line'>else
</span><span class='line'>  set fileencoding=utf-8
</span><span class='line'>endif
</span><span class='line'>"解决中文菜单乱码
</span><span class='line'>set langmenu=zh_cn.utf-8
</span><span class='line'>source $vimruntime/delmenu.vim
</span><span class='line'>source $vimruntime/menu.vim
</span><span class='line'>"解决console输出乱码
</span><span class='line'>language messages zh_cn.utf-8</span></code></pre></td></tr></table></div></figure>


<p>Vim学习笔记</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP调试工具XHProf安装与使用]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/12/27/phpdiao-shi-gong-ju-xhprofan-zhuang-yu-shi-yong/"/>
    <updated>2013-12-27T14:03:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/12/27/phpdiao-shi-gong-ju-xhprofan-zhuang-yu-shi-yong</id>
    <content type="html"><![CDATA[<p>XHProf是一个PHP性能调试分析工具，在不知道这个工具之前一直使用的是XDebug。
在使用XDebug时一直很头疼一个问题，就是配置好后它会对整个WEB服务器上的网站进行分析，生成文件。
无法自定义具体分析哪一个网站。XHProf可又很好的解决这一问题。</p>

<p>安装XHProf</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#下载安装文件
</span><span class='line'>wget http://pecl.php.net/get/xhprof-0.9.4.tgz 
</span><span class='line'>tar zxf xhprof-0.9.4.tgz
</span><span class='line'>cd xhprof-0.9.4  
</span><span class='line'>cd extension  
</span><span class='line'>phpize  
</span><span class='line'>./configure  
</span><span class='line'>make  
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>
添加so文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vim xhprof.ini
</span><span class='line'>
</span><span class='line'>extension=xhprof.so  
</span><span class='line'>#分析文件存放目录，需要预先创建
</span><span class='line'>xhprof.output_dir=&lt;directory_for_storing_xhprof_runs></span></code></pre></td></tr></table></div></figure>


<p>查看安装结果</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="nb">phpinfo</span><span class="p">();</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://xiexiaoqi.github.io/images/post_img/xhprof_info.png" title="phpinfo()" ></p>

<p>将安装目录下的examples,xhprof_html,xhprof_lib复制到站点根目录下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>examples    一个简单的试例
</span><span class='line'>xhprof_html 查看分析结果
</span><span class='line'>xhprof_lib  分析时所用到的库文件</span></code></pre></td></tr></table></div></figure>


<p>到这里就已经安装完成了。如何使用可以参照examples/sample.php。</p>

<figure class='code'><figcaption><span>sample.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">function</span> <span class="nf">bar</span><span class="p">(</span><span class="nv">$x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$x</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">bar</span><span class="p">(</span><span class="nv">$x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">function</span> <span class="nf">foo</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="nv">$idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nv">$idx</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="nv">$idx</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">bar</span><span class="p">(</span><span class="nv">$idx</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$x</span> <span class="o">=</span> <span class="nb">strlen</span><span class="p">(</span><span class="s2">&quot;abc&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 启动 xhprof 性能分析器</span>
</span><span class='line'>  <span class="nx">xhprof_enable</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 执行自定义方法</span>
</span><span class='line'>  <span class="nx">foo</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// 停止 xhprof 分析器</span>
</span><span class='line'>  <span class="nv">$xhprof_data</span> <span class="o">=</span> <span class="nx">xhprof_disable</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//输入库文件</span>
</span><span class='line'>  <span class="nv">$XHPROF_ROOT</span> <span class="o">=</span> <span class="nb">realpath</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">)</span> <span class="o">.</span><span class="s1">&#39;/..&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">include_once</span> <span class="nv">$XHPROF_ROOT</span> <span class="o">.</span> <span class="s2">&quot;/xhprof_lib/utils/xhprof_lib.php&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="k">include_once</span> <span class="nv">$XHPROF_ROOT</span> <span class="o">.</span> <span class="s2">&quot;/xhprof_lib/utils/xhprof_runs.php&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// save raw data for this profiler run using default</span>
</span><span class='line'>  <span class="c1">// implementation of iXHProfRuns.</span>
</span><span class='line'>  <span class="nv">$xhprof_runs</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">XHProfRuns_Default</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// save the run under a namespace &quot;xhprof_foo&quot;</span>
</span><span class='line'>    <span class="nv">$namespace</span> <span class="o">=</span> <span class="s1">&#39;xhprof_foo&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="c1">//返回run_id,查询结果时使用</span>
</span><span class='line'>  <span class="nv">$run_id</span> <span class="o">=</span> <span class="nv">$xhprof_runs</span><span class="o">-&gt;</span><span class="na">save_run</span><span class="p">(</span><span class="nv">$xhprof_data</span><span class="p">,</span> <span class="nv">$namespace</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//点击下面的view info 链接，查看具信息</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">echo</span> <span class="s2">&quot;---------------</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span>
</span><span class='line'>       <span class="s2">&quot;&lt;a target=&#39;_blank&#39; href = &#39;http://192.168.20.89:8080/xhprof/xhprof_html/index.php?run=</span><span class="si">{</span><span class="nv">$run_id</span><span class="si">}</span><span class="s2">&amp;source=</span><span class="si">{</span><span class="nv">$namespace</span><span class="si">}</span><span class="s2">&#39;&gt;</span>
</span><span class='line'><span class="s2">      VIEW INFO</span>
</span><span class='line'><span class="s2">      &lt;/a&gt;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="o">.</span>
</span><span class='line'>       <span class="s2">&quot;---------------</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>默认是以表格形式列出信息，xhprof还提供一种拓扑图的呈现方式。这个方式需要安装Graphviz画图工具。
此工具需要先安装libpng，如果没有装这个库则 执行时可能会把类似“png格式错误”这类的错误。</p>

<p>安装 libpng</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#下载libpng-1.5.17
</span><span class='line'>wget http://jaist.dl.sourceforge.net/project/libpng/libpng15/1.5.17/libpng-1.5.17.tar.gz
</span><span class='line'>tar -zxvf libpng-1.5.17.tar.gz
</span><span class='line'>cd libpng-1.5.17 
</span><span class='line'>./configure  
</span><span class='line'>make  
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<p>安装 Graphviz</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#下载graphviz-2.24.0
</span><span class='line'>wget http://www.graphviz.org/pub/graphviz/stable/SOURCES/graphviz-2.24.0.tar.gz  
</span><span class='line'>tar zxf graphviz-2.24.0.tar.gz  
</span><span class='line'>cd graphviz-2.24.0  
</span><span class='line'>./configure  --with-png=yes
</span><span class='line'>make  
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<p>安装完成后，可以在结果列表页点击 [View Full Callgraph] 查看拓扑图
结果如下
<a href = "http://xiexiaoqi.github.io/images/post_img/xhprof_info_table.png" title = 'table' class = 'fl_left'>
<img src="http://xiexiaoqi.github.io/images/post_img/xhprof_info_table.png" width="300">
</a>
<a href = "http://xiexiaoqi.github.io/images/post_img/xhprof_info_png.png" title = 'png' class = 'fl_left'>
<img src="http://xiexiaoqi.github.io/images/post_img/xhprof_info_png.png" width="300">
</a></p>

<p class = 'clear'></p>


<p>参考链接：</p>

<p><a href="http://www.php.net/manual/zh/book.xhprof.php">http://www.php.net/manual/zh/book.xhprof.php</a></p>

<p>PHP调试工具XHProf安装与使用</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JS 数组迭代方法]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/22/jsshu-zu-die-dai-qi/"/>
    <updated>2013-10-22T02:18:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/22/jsshu-zu-die-dai-qi</id>
    <content type="html"><![CDATA[<p>ECMAScripts 5 为数组提供了5个迭代方法，分别为：</p>

<pre><code>every()：对数组中的每一项运行一个函数，如果该函数对每一项都返回true,则返回true。

filter()：对数组中的每一项运行一个函数，返回该函数会返回true的项目组成的数组。

map()：对数组中的每一项运行一个函数，返回每次函数调用的结果 组成的数组。

some()：对数组中的每一项运行一个函数，如果该函数对任一一项返回true,则返回true。。

forEach()：对数组中的每一项运行一个函数，无返回值。
</code></pre>

<!--more-->


<p>这里的每个方法都接受两个参数：要在每一项上运行的函数；（可选项）运行该函数的作用域对象——影响 this 的值。</p>

<p>传入这些方法中的函数会接受三个参数：数组的项；数组项的索引；数组对象本身。</p>

<p>从上面的方法可以看出根据使用方法的不同，所返回的结果也是不同。</p>

<p>请看以下例子：</p>

<!--every()-->




<figure class='code'><figcaption><span>every() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">everyResult</span> <span class="o">=</span> <span class="nx">number</span><span class="p">.</span><span class="nx">every</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">item</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span> <span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">item</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//一假全假，有点类似于&amp;&amp;运算。</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span> <span class="nx">everyResult</span> <span class="p">);</span>  <span class="c1">// false</span>
</span></code></pre></td></tr></table></div></figure>




<!--filter()-->




<figure class='code'><figcaption><span>filter() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">filterResult</span> <span class="o">=</span> <span class="nx">number</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">item</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span> <span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">item</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//返回符合条件的结果</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span> <span class="nx">filterResult</span> <span class="p">);</span>  <span class="c1">// 3,4,5,4,3</span>
</span></code></pre></td></tr></table></div></figure>




<!--map()-->




<figure class='code'><figcaption><span>map() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">mapResult</span> <span class="o">=</span> <span class="nx">number</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">item</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span> <span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">item</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//返回执行结果</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span> <span class="nx">mapResult</span> <span class="p">);</span>  <span class="c1">// 2,4,6,8,10,8,6,4,2</span>
</span></code></pre></td></tr></table></div></figure>




<!--some()-->




<figure class='code'><figcaption><span>some() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">someResult</span> <span class="o">=</span> <span class="nx">number</span><span class="p">.</span><span class="nx">some</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">item</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span> <span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">item</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//如果有一项符合条件，则返回true</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span> <span class="nx">someResult</span> <span class="p">);</span>  <span class="c1">// true</span>
</span></code></pre></td></tr></table></div></figure>




<!--forEach()-->




<figure class='code'><figcaption><span>forEach() </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">number</span> <span class="o">=</span> <span class="p">[</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span> <span class="p">];</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">forEachResult</span> <span class="o">=</span> <span class="nx">number</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">item</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">array</span> <span class="p">){</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">item</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//无返回值，相当于for循环</span>
</span><span class='line'><span class="nx">alert</span><span class="p">(</span> <span class="nx">forEachResult</span> <span class="p">);</span>  <span class="c1">// undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP类中成员属性赋值]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/22/phplei-zhong-cheng-yuan-shu-xing-fu-zhi/"/>
    <updated>2013-10-22T01:51:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/22/phplei-zhong-cheng-yuan-shu-xing-fu-zhi</id>
    <content type="html"><![CDATA[<p>在PHP类中给成员属性赋值只能赋常数值，如果你尝试给成员属性赋一个表达式如：time();那么将会报错。
根据官方解释为：&#8221;属性中的变量可以初始化，但是初始化的值必须是常数，这里的常数是指php脚本在编译阶段时就为常数，而不是在编译阶段之后在运行阶段运算出的常数。&#8221;</p>

<p>这里time()就是个表达式, 变量同样也是个表达式, 所以会报错。</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[url通过GET[]传数组类型参数]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/22/urltong-guo-get-chuan-shu-zu-lei-xing-can-shu/"/>
    <updated>2013-10-22T01:49:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/22/urltong-guo-get-chuan-shu-zu-lei-xing-can-shu</id>
    <content type="html"><![CDATA[<p>由于通过get提交的参数是无法提交数组的，所以只能将数组格式化为字符串再提交。而之后会遇一个问题，就是在url中，如果所提交的参数含有空格，引号之类的特殊符号就会被默认转义，那么在后台通过$_GET[]直接获取，直接在浏览器打印出来，看到的结果是你想要的，如果查看源代码那么你会发现类似这样的字符串#039;artist#039;“#039;”是&#8221;&lsquo;&ldquo;号的转义。
所以这样的值是无效的。</p>

<p>解决方法：
在将字符串传入url之前通过urlencode()方法将字符串编码，然后在取得值时，通过urldecode解码。这样就得到了您想要的了！</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP SPL库列表]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/22/php-splku-lie-biao/"/>
    <updated>2013-10-22T00:51:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/22/php-splku-lie-biao</id>
    <content type="html"><![CDATA[<p>经常在一些PHP框架中看到有关于SPL库的使用，所以自己就在网搜了一些资料了解了一下。
只是给自己整理的，方便以后查阅！</p>

<!--more-->


<p>Iterator接口，可以把对象当做数组一样进行循环操作</p>

<p>ArrayAccess界面，可以使对象像数组一下进么操作，如：增加，删除,但不能进行遍历</p>

<p>IteratorAggregate接口， 针对上面两种进行的中和，</p>

<p>RecursiveIterator 接口，遍历多层数据</p>

<p>Countable 接口，返回集的数量</p>

<p>DirectoryIterator 类，查看目录中的所以文件和子目录</p>

<p>ArrayObject类，将Array转化为object//没有遍历功能</p>

<p>ArrayIterator类，为ArrayObject提供遍历功能</p>

<p>FilterIterator类，可以对元素进行过滤，在accept()方法中设置过滤条件</p>

<p>SimpleXMLIterator类，遍历xml文件</p>

<p>CachingIterator类，这个类有hasNext()方法，用来判断是否还有下一个元素</p>

<p>LimitIterator类，限定返回结果集的数量和位置</p>

<p>SplFileObject类，对文本文件进行遍历</p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP SPL库尝试:DirectoryIterator类]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/22/php-splku-chang-shi-directoryiteratorlei/"/>
    <updated>2013-10-22T00:10:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/22/php-splku-chang-shi-directoryiteratorlei</id>
    <content type="html"><![CDATA[<p>以往如果我们要遍历一个目录下的文件，包括子目录，一般是使用PHP Directory 函数，如下面这个方法，但是如果你还想获得目录下文件的信息，就还得费一些手段了。</p>

<!--more-->




<figure class='code'><figcaption><span>遍历目录一般做法 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">list_dir</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$dir_handle</span> <span class="o">=</span> <span class="nb">opendir</span><span class="p">(</span><span class="nv">$path</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$ret_arr</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>        <span class="k">while</span><span class="p">(</span><span class="nv">$dir_read</span> <span class="o">=</span> <span class="nb">readdir</span><span class="p">(</span><span class="nv">$dir_handle</span><span class="p">))</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nv">$dir_read</span> <span class="o">==</span> <span class="s2">&quot;.&quot;</span> <span class="o">||</span> <span class="nv">$dir_read</span> <span class="o">==</span> <span class="s2">&quot;..&quot;</span><span class="p">)</span>
</span><span class='line'>                <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nb">is_dir</span><span class="p">(</span><span class="nv">$dir_read</span><span class="p">))</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nv">$ret_arr</span><span class="p">[</span><span class="nv">$path</span><span class="p">][</span><span class="nv">$dir_read</span><span class="p">]</span> <span class="o">=</span> <span class="nx">list_dir</span><span class="p">(</span><span class="nv">$path</span><span class="o">.</span><span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$dir_read</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nv">$ret_arr</span><span class="p">[</span><span class="nv">$path</span><span class="p">][]</span> <span class="o">=</span> <span class="nv">$dir_read</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$ret_arr</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>使用SPL类库中的DirectoryIterator类，它可以以一种操作类属性的方式来取得关于文件的一些属性，下面也看一上使用了DirectoryIterator写的遍历目录的方法。</p>

<figure class='code'><figcaption><span>使用DirectoryIterator类做法 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">list_dir</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$ret_array</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>        <span class="k">foreach</span><span class="p">(</span> <span class="k">new</span> <span class="nx">DirectoryIterator</span><span class="p">(</span><span class="nv">$path</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$keys</span> <span class="o">=&gt;</span> <span class="nv">$files</span> <span class="p">)</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span> <span class="nv">$files</span><span class="o">-&gt;</span><span class="na">isDot</span><span class="p">()</span> <span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="k">continue</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nv">$fileName</span> <span class="o">=</span> <span class="nv">$files</span><span class="o">-&gt;</span><span class="na">getFilename</span><span class="p">();</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span> <span class="nv">$files</span><span class="o">-&gt;</span><span class="na">getType</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;dir&#39;</span> <span class="p">)</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nv">$ret_array</span><span class="p">[</span><span class="nv">$fileName</span><span class="p">]</span> <span class="o">=</span> <span class="nx">list_dir</span><span class="p">(</span><span class="nv">$path</span><span class="o">.</span><span class="s1">&#39;/&#39;</span><span class="o">.</span><span class="nv">$fileName</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">else</span>
</span><span class='line'>            <span class="p">{</span>
</span><span class='line'>                <span class="nv">$ret_array</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$fileName</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$ret_array</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>可用到关于文件检测的方法如：isReadable(); isFile(); isDir(); isDir()&hellip;.具体方法，
请参考SPL.php文件，或<a href="http://www.php.net/manual/en/directoryiterator.construct.php">http://www.php.net/manual/en/directoryiterator.construct.php</a></p>

<p>【完】</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress博客配置笔记:1]]></title>
    <link href="http://xiexiaoqi.github.io/blog/2013/10/21/octopressbo-ke-pei-zhi-bi-ji-1/"/>
    <updated>2013-10-21T17:26:00+08:00</updated>
    <id>http://xiexiaoqi.github.io/blog/2013/10/21/octopressbo-ke-pei-zhi-bi-ji-1</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/" class="fl_left a_unline">
<img class="insert_img" src="http://xiexiaoqi.github.io/images/post_img/octopress.jpg" title="Octopress" >
</a>
<a href="https://github.com/" class="fl_left a_unline">
<img class="insert_img" src="http://xiexiaoqi.github.io/images/post_img/github.jpg" title="github" >
</a></p>

<p class="clear" /></p>


<p>安装此博客时，参照了官方的一些说明文档( <a href="http://octopress.org/docs/">octopress</a>、<a href="https://help.github.com/categories/20/articles">github</a> )，外加自己的google。</p>

<!-- more -->


<p>
第一步</p>

<p>安装Octopress 到您的系统。
我的系统环境为“centos 6.3”。</p>

<p>安装 git</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>yum install git</span></code></pre></td></tr></table></div></figure>


<p>安装Ruby，Ruby版本必须大于1.9.3，不使用Ruby的话可以使用“rbenv 或 RVM.”，在这里我使用的时Ruby。 Octoperss使用yaml格式文件作为配置文件，所以还需要安装libyaml。 先安装 libyaml</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz
</span><span class='line'>tar xzvf yaml-0.1.4.tar.gz
</span><span class='line'>cd yaml-0.1.4
</span><span class='line'>./configure --prefix=/usr/local
</span><span class='line'>make
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<p>安装Ruby</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#使用ftp下载
</span><span class='line'>lftp ftp.ruby-lang.org
</span><span class='line'>lftp ftp.ruby-lang.org:/> cd /pub/ruby
</span><span class='line'>lftp ftp.ruby-lang.org:/pub/ruby>
</span><span class='line'>lftp ftp.ruby-lang.org:/pub/ruby> get ruby-1.9.3.pXXX.tar.gz  # 选择合适的版本下载
</span><span class='line'>lftp ftp.ruby-lang.org:/pub/ruby> exit
</span><span class='line'>#编辑安装
</span><span class='line'>tar zxvf ruby-1.9.3.pXXX.tar.gz
</span><span class='line'>cd ruby-1.9.3.pXXX
</span><span class='line'>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib
</span><span class='line'>make
</span><span class='line'>make install</span></code></pre></td></tr></table></div></figure>


<p>安装Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress
</span><span class='line'>
</span><span class='line'># 安装相关依赖
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>
</span><span class='line'># 安装默认主题
</span><span class='line'>rake install
</span><span class='line'>
</span><span class='line'>#设置您的github链接(http://username.github.io)，当用在rake deploy时，octopress知道要将源码提交到哪
</span><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>到这里Otopress就安装好了。</p>

<p>第二步</p>

<p>配置您的github</p>

<p>登录github，github为每个用户提供一个个人主页，为每每个项目提供一个项目主页。这些都是只能是静态HTML文件的。 进去后您会看到类似于“yourname.github.io”这样的一个字样，和您创建的项目列在一起，点击链接进去。 可以参考这个<a href="https://help.github.com/articles/creating-pages-with-the-automatic-generator" target="_blank">页面</a>，从第一步到第六步。 这样直接访问“yourname.github.io”，就可以看到您刚才设置的那套模板了！我们就是利用这一种方式来搭建一个速度可观，无限流量的blog。</p>

<p>生成SSH keys</p>

<p>当您提交代码到您的github时，git是需要权限验证的。所以您需要用您注册时所使用的email来生成一个唯一的SSH keys，并为这设置密码。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -C "your_email@example.com"
</span><span class='line'># Creates a new ssh key, using the provided email as a label
</span><span class='line'># Generating public/private rsa key pair.
</span><span class='line'># 直接回车，将文件存放在用户目录
</span><span class='line'># Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]
</span><span class='line'>ssh-add id_rsa
</span><span class='line'>
</span><span class='line'># 输入密码
</span><span class='line'>Enter passphrase (empty for no passphrase): [Type a passphrase]
</span><span class='line'># Enter same passphrase again: [Type passphrase again]</span></code></pre></td></tr></table></div></figure>


<p>将生成的key复制到您的github账户</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/.ssh
</span><span class='line'>vi id_rsa.pub
</span><span class='line'># 显示类似于这样的字符：ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAu2PxN9ft1wdaFaMcQJbS+MOTKsEJ6nU....</span></code></pre></td></tr></table></div></figure>


<p>添加操作”Account settings &ndash;> SSH Keys &ndash;> Add SSH key”，完成添加。</p>

<p>测试连接是否正常</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -T git@github.com
</span><span class='line'>#输入密码后，当看到显示下面的字符时，说明连接成功
</span><span class='line'>#Hi yourname! You've successfully authenticated, but GitHub does not provide shell access.</span></code></pre></td></tr></table></div></figure>


<p>Octopress博客配置笔记:1</p>

<p>【完】</p>
]]></content>
  </entry>
  
</feed>
